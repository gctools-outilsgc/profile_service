type Profile {
  gcID: ID! @unique
  name: String!
  email: String! @unique
  avatar: String
  mobilePhone: String
  officePhone: String
  address: Address @relation(name:"Resident", onDelete: CASCADE)
  titleEn: String
  titleFr: String
  team: Team @relation(name:"TeamMembers")
  ownerOfTeams: [Team!]! @relation(name:"OwnerOfTeam")
  outstandingApprovals: [Approval] @relation(name:"Approver")
  submittedApprovals: [Approval] @relation(name:"Submitter")
}

type Address {
  id: ID! @unique
  streetAddress: String!
  city: String!
  province: String!
  postalCode: String!
  country: String!
  resident: Profile! @relation(name:"Resident")
}

type Team {
  id: ID! @unique
  nameEn: String!
  nameFr: String!
  descriptionEn: String
  descriptionFr: String
  colour: String,
  avatar: String,
  organization: Organization! @relation(name:"Teams")
  owner: Profile @relation(name:"OwnerOfTeam")
  members: [Profile!]! @relation(name:"TeamMembers")
}

type Organization {
  id: ID! @unique
  nameEn: String!
  nameFr: String!
  acronymEn: String!
  acronymFr: String!
  teams: [Team!]! @relation(name:"Teams", onDelete: CASCADE) 
}

type Approval {
    id: ID! @unique
    gcIDApprover: Profile! @relation(name:"Approver")
    gcIDSubmitter: Profile @relation(name:"Submitter")
    requestedChange: RequestedChange!
    createdOn: Int!
    actionedOn: Int
    deniedComment: String
    status: Status!
    changeType: ChangeType!
}

type RequestedChange {
    id: ID! @unique
    gcID: ID
    name: String
    email: String
    avatar: String
    mobilePhone: String
    officePhone: String
    address: Address
    titleEn: String
    titleFr: String
    team: Team
}

enum Status {
    Pending
    Approved
    Denied
}
enum ChangeType {
    Membership
    Informational
} 