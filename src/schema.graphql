# import Address from './generated/prisma.graphql'

# The @inOrganization directive can be placed on a field of a Profile object and will only
# return the field value if the requestor is in the same organization
directive @inOrganization on FIELD_DEFINITION

# The @isAuthenticated directive can be placed on the Query/Mutation, Object, and field level
# The access token passed must be valid in order to proceed.
directive @isAuthenticated on OBJECT | FIELD_DEFINITION

# The @isSameTeam directive can be placed on a field of a Profile object and will only
# return the field value if the requestor is on the same team
directive @isSameTeam on FIELD_DEFINITION

# The @isSupervisor directive can be placed on a field of a Profile object and will only
# return the field value if the requestor is the assigned supervisor
directive @isSupervisor on FIELD_DEFINITION

# The @isOwner directive can be placed on a filed of a Profile object and will only
# return the field value if the requestor is the owner (has the same gcID)
directive @isOwner on FIELD_DEFINITION


scalar Email
scalar PhoneNumber
scalar Upload
scalar PostalCode

type Query {
  profiles(gcID: ID, name: String, email: Email, mobilephone: String, officePhone: String , titleEn: String, titleFr: String, skip: Int, first: Int): [Profile!]!,
  addresses(id: ID, streetAddress: String, city: String, province: String, postalCode: String, country: String, skip: Int, first: Int): [Address!]!,
  teams(id: ID, nameEn: String, nameFr: String, descriptionEn: String, descriptionFr: String, skip: Int, first: Int): [Team!]!,
  organizations(id: ID, nameEn: String, nameFr: String, acronymEn: String, acronymFr: String, skip: Int, first: Int): [Organization!]!,
}

type Mutation {
  createProfile(gcID: ID!, name: String!, email: Email!, avatar: Upload, titleEn: String, titleFr: String, mobilePhone: PhoneNumber, officePhone: PhoneNumber, address: AddressInput, team: TeamInput): Profile!
  modifyProfile(gcID: ID!, data: ModifyProfileInput): Profile!
  deleteProfile(gcID: ID!): Boolean!
  createTeam(nameEn: String!, nameFr: String!, descriptionEn: String, descriptionFr: String, organization: OrganizationInput!, owner: TeamOwnerInput!): Team!
  modifyTeam(id: ID!, data: ModifyTeamInput): Team!
  deleteTeam(id: ID!): Boolean!
  createOrganization(nameEn: String!, nameFr: String!, acronymEn: String!, acronymFr: String!): Organization!
  modifyOrganization(id: ID!, data: ModifyOrganizationInput): Organization!
  deleteOrganization(id: ID!): Boolean!
}

type MultiLingualField {
  en_CA: String
  fr_CA: String
  id: String
}

type Profile {
  gcID: ID!
  name: String!
  email: Email!
  avatar: String
  mobilePhone: PhoneNumber
  officePhone: PhoneNumber
  address: Address
  titleEn: String
  titleFr: String
  team: Team
  ownerOfTeams: [Team!]!
}

type Address {
  id: ID!
  streetAddress: String!
  city: String!
  province: String!
  postalCode: String!
  country: String!,
  resident: Profile!
}

type Team {
  id: ID!
  nameEn: String!
  nameFr: String!
  descriptionEn: String
  descriptionFr: String,
  colour: String,
  avatar: String,
  organization: Organization!
  owner: Profile
  members: [Profile!]!
}

type Organization {
  id: ID!
  nameEn: String!
  nameFr: String!
  acronymEn: String!
  acronymFr: String!
  teams: [Team!]!
}

input TeamOwnerInput {
  gcID: ID,
  email: Email
}

input TeamInput {
  id: ID!
}

input OrganizationInput {
  id: ID!
}

input OwnerInput{
  gcID: ID
  email: String
}

input AddressInput {
  streetAddress: String
  city: String
  province: String
  postalCode: PostalCode
  country: String
}

input ModifyProfileInput {
  name: String
  email: Email
  avatar: Upload
  mobilePhone: PhoneNumber
  officePhone: PhoneNumber
  address: AddressInput
  titleEn: String
  titleFr: String
  team: TeamInput
}

input ModifyTeamInput {
  nameEn: String
  nameFr: String
  descriptionEn: String
  descriptionFr: String,
  colour: String,
  avatar: Upload,
  organization: OrganizationInput
  owner: OwnerInput
}

input ModifyOrganizationInput {
  nameEn: String
  nameFr: String
  acronymEn: String
  acronymFr: String
}
